<head>
  <link rel="manifest" href="/manifest.json" />
</head>
<div class="center jumbotron">
  <h2> Διάλεξε ομάδα! </h2>

  <div style="text-align: center;">

    <!-- H lista me tous paiktes ths ghpedouxou omadas -->
     <ol style=" display: inline-block;">

        <h4 > Hometeam </h4>

        <% emptyList = @game.hometeam.capacity - @game.hometeam.users.count %>

     		<% @game.hometeam.users.each do |player| %>
       	    <li> <%= link_to "#{player.name}", user_path(player), class: ['btn','btn-link'] %></li>
        <% end %>

        <% emptyList.times do |e| %>
          <li> κενή θέση  </li>
          <br>
        <% end %>

        <br>
        <br>

        <%= link_to 'Παίξε σε αυτήν την ομάδα' , join_path(@game.hometeam.id), class: ['btn','btn-info']%>
     </ol>


    <!-- H lista me tous paiktes ths filoksenoumenhs omadas -->
     <ol style=" display: inline-block;">
      <h4 > Awayteam </h4>

      <% emptyList = @game.awayteam.capacity - @game.awayteam.users.count %>

     	<% @game.awayteam.users.each do |player| %>
       	  <li> <%= link_to "#{player.name}", user_path(player), class: ['btn','btn-link'] %></li>
      <% end %>

      <% emptyList.times do |e| %>
        <li> κενή θέση </li>
        <br>
      <% end %>
      <br>
      <br>

        <%= link_to 'Παίξε σε αυτήν την ομάδα' , join_path(@game.awayteam.id), class: ['btn','btn-info'] %>
     </ol>
  <div>
</div>

<div style="text-align: center;"><%= link_to 'Επιστροφή' , games_path, class: ['btn','btn-primary']%></div>
<br>
<div style="text-align: center;"><%= button_to 'Send notification', sendmessage_path(current_user),class: ['btn','btn-primary']%></div>


<!-- ========================= subscribe to VAPID public key ===============================-->

 

<script type="application/javascript"> 

    window.vapidPublicKey = new Uint8Array(<%= Base64.urlsafe_decode64(ENV['VAPID_PUBLIC_KEY']).bytes %>);


   function checkNotifs(obj){
      if (!("Notification" in window)) {                                             //1
           console.error("This browser does not support desktop notification");
         }
         // Let's check whether notification permissions have already been granted
         else if (Notification.permission === "granted") {                           //2
           console.log("Permission to receive notifications has been granted");
           getKeys();
         }
         // Otherwise, we need to ask the user for permission
         else if (Notification.permission !== 'denied') {                            //3
           Notification.requestPermission(function (permission) {                    
                 // If the user accepts, let's create a notification
             if (permission === "granted") {                                         //4
               console.log("Permission to receive notifications has been granted");
               getKeys();                                                       
             } 
           });
        }
   }

     function getKeys(){
       navigator.serviceWorker.register('/serviceworker.js', {scope: './'})          //5
         .then(function(registration) {
           return registration.pushManager.getSubscription()
             .then(function(subscription) {
               if (subscription) {
                 return subscription;
               }
               return registration.pushManager.subscribe({                           //6
                 userVisibleOnly: true,
                 applicationServerKey: vapidPublicKey
               });
             });
         }).then(function(subscription) {
           sendKeys(subscription.toJSON())                                           //7
         });
     }

     function sendKeys(subscription){
       $.post('/sendkeys', {
           subscription: subscription,
           message: 'You clicked a button!'
         });
     }

</script>








